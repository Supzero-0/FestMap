name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Resolve dependencies
        run: ./mvnw -B -ntp dependency:go-offline

      - name: Lint
        run: ./mvnw -B -ntp checkstyle:check

#      - name: Test
#        run: ./mvnw -B -ntp test

  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build -- --configuration=production

      # - name: Install Chrome
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y wget gnupg
      #     wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      #     echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
      #     sudo apt-get update
      #     sudo apt-get install -y google-chrome-stable

      # - name: Test
      #   env:
      #     CI: true
      #     CHROME_BIN: /usr/bin/google-chrome
      #   run: npm test -- --watch=false --browsers=ChromeHeadless --no-progress

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run e2e

      - name: Upload Playwright report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/playwright-report

  docker:
    name: Docker images
    runs-on: ubuntu-latest
    needs:
      - backend
      - frontend
    strategy:
      matrix:
        include:
          - name: api
            dockerfile: api/Dockerfile
            context: api
            target: prod
          - name: client
            dockerfile: client/Dockerfile
            context: client
            target: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ matrix.dockerfile }}

      - name: Build ${{ matrix.name }} image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          target: ${{ matrix.target }}
          push: false

  notify:
    name: Failure notifications
    runs-on: ubuntu-latest
    needs:
      - backend
      - frontend
      - docker
    if: failure()
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Notify maintainers
        uses: actions/github-script@v7
        env:
          RUN_ID: ${{ github.run_id }}
        with:
          script: |
            const {owner, repo} = context.repo;
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            const runUrl = `https://github.com/${owner}/${repo}/actions/runs/${process.env.RUN_ID}`;
            const body = [
              'üö® **CI √©chou√©e**',
              '',
              `Workflow: [${process.env.GITHUB_WORKFLOW}](${runUrl})`,
              `Commit: ${sha}`,
              '',
              'Merci de v√©rifier les logs pour plus de d√©tails.'
            ].join('\n');

            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.payload.pull_request.number,
                body,
              });
            } else {
              await github.rest.repos.createCommitComment({
                owner,
                repo,
                commit_sha: sha,
                body,
              });
            }