name: FestMap
services:
  db:
    image: postgres:16-alpine
    container_name: FestMapDB
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      target: dev
    container_name: FestMapAPI
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      DB_URL: jdbc:postgresql://db:5432/${POSTGRES_DB_NAME}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      SERVER_PORT: ${API_PORT}
      SPRING_DEVTOOLS_RESTART_POLL_INTERVAL: 2s
      SPRING_DEVTOOLS_RESTART_QUIET_PERIOD: 1s
    ports:
      - "${API_PORT}:8080"
    volumes:
      - ./api:/app
      - ~/.m2:/root/.m2
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: dev
    container_name: FestMapClient
    working_dir: /app
    environment:
      - NG_CLI_ANALYTICS=false
    ports:
      - "${CLIENT_PORT}:4200"
    volumes:
      - ./client:/app
      - client_node_modules:/app/node_modules
    depends_on:
      - api
    command: ["sh","-lc","npm ci && npx ng serve --host=0.0.0.0 --port=4200"]

volumes:
  db-data:
  client_node_modules: